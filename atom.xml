<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ConnorZJ&#39;s Blog</title>
  
  <subtitle>Nothing is True, Everything is Permitted.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.connorzj.github.io/"/>
  <updated>2020-06-17T16:03:01.134Z</updated>
  <id>http://www.connorzj.github.io/</id>
  
  <author>
    <name>Connor</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动态规划初入门</title>
    <link href="http://www.connorzj.github.io/2020/06/16/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://www.connorzj.github.io/2020/06/16/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</id>
    <published>2020-06-16T15:44:45.000Z</published>
    <updated>2020-06-17T16:03:01.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划">          <a href="#动态规划" class="heading-link"><i class="fas fa-link"></i></a>动态规划</h1>      <p>动态规划(Dynamic Programming， DP)是运筹学的一个分支，是求解决策过程最优化的过程。</p><p>动态规划作为算法题目中比较经典，也是难题之一，曾困扰我非常久。每次刷题的时候，看到动态规划求解的题型，我都唯恐避之不及。但是一直逃避也不是办法，于是我打算重<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8">✊</span>出击，迎难而上，克服恐惧！</p>        <h2 id="什么是动态规划">          <a href="#什么是动态规划" class="heading-link"><i class="fas fa-link"></i></a>什么是动态规划</h2>      <p>经过我查找多篇博客，总结出动态规划的核心思想是：<strong>记录以前做过的操作，等到下一次要再使用时，可以不用重复操作。</strong></p><p>我们可以把一类活动分成多个互相联系的各个阶段，在每一个阶段经过操作之后得到的结果记录下来，并使用到下一个阶段之中。举个例子，就是当要去计算1+1+1+1的结果时，可以先记录第一个1和第二个1相加的结果为2，然后再将2加上第三个1结果为3，然后再将3加上最后一个1结果为4，这样一来，就符合了动态规划的思想。很明显，动态规划是一个能够通过空间换取时间的算法，将结果储存起来，避免多次计算。</p>        <h2 id="动态规划问题如何解决">          <a href="#动态规划问题如何解决" class="heading-link"><i class="fas fa-link"></i></a>动态规划问题如何解决</h2>      <p>想要解决动态规划问题，理解了上面的概念之后，就很好办了。对于我而言，我总结了几个解题步骤，希望能对大家有所帮助。</p><p>第一步，将题目分成若干个子问题，也就是将大问题拆分成小问题，每个小问题之间要有联系，并且小问题要是一个简单易于计算的。</p><p>第二步，找出小问题解决的出口，并记录结果，把结果用于另一个小问题上面。</p><p>第三步，将小问题联合起来，一个一个的串联，最终就可以解决动态规划了。</p>        <h2 id="题目实战">          <a href="#题目实战" class="heading-link"><i class="fas fa-link"></i></a>题目实战</h2>      <p>接下来，我将分享一下，通过我自己的这个思路，如何解决leetcode上面的一些动态规划的问题。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态规划&quot;&gt;
          &lt;a href=&quot;#动态规划&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;动态规划&lt;/h1&gt;
      &lt;p&gt;动态规划(Dynamic Programming， DP
      
    
    </summary>
    
    
      <category term="算法" scheme="http://www.connorzj.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="动态规划" scheme="http://www.connorzj.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="算法" scheme="http://www.connorzj.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
